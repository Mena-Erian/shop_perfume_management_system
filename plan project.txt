===========================================
Project Title: Perfume Shop Management System
Detailed Plan and Task Breakdown
===========================================

1. مقدمة المشروع
-----------------
المشروع عبارة عن نظام إدارة محل عطور بيركز على جزأين رئيسيين:
أ) الإدارة الخلفية (Backoffice) لإدارة المخزون، المشتريات، المبيعات، الموظفين والتقارير.
ب) واجهة العملاء (POS online) لبيع العطور عبر الموقع الإلكتروني (زي Amazon وeBay).

===========================================
2. تفاصيل قاعدة البيانات (Supabase)
-------------------------------------
- الجداول الرئيسية:
  * raw_materials: تخزين بيانات المواد الخام مثل الزيوت والكحول.
  * bottles: تخزين أنواع ومواصفات الزجاجات.
  * products: بيانات العطور الجاهزة وربطها بالمواد والزجاجات.
  * purchases: تسجيل عمليات شراء المواد الخام والزجاجات.
  * sales: تسجيل المبيعات.
  * employees: بيانات الموظفين.
  * bills: سجلات الفواتير والطلبات.

- العلاقات:
  * ربط المنتج بالمواد الخام والزجاجة المستخدمة.
  * كل فاتورة مرتبطة بعمليات البيع والموظف الذي قام بالعملية.

- التقارير:
  * views لتقارير المخزون، المبيعات اليومية والشهرية، وربحية المشروع.

===========================================
3. تفاصيل الواجهة الأمامية (Frontend)
-----------------------------------------
التقنيات المستخدمة:
  - Angular مع SSR.
  - Tailwind CSS لتصميم متجاوب.
  - PrimeNG لعناصر UI التفاعلية.
  - Flowbite لتطوير الواجهات.

هيكلة المشروع:
  * src/app/core: الخدمات العامة والاتصال بالـ API.
  * src/app/shared: المكونات المشتركة مثل الأزرار والنماذج.
  * src/app/features: تضم الأقسام الأساسية (auth، backoffice، pos).
  
التوجيه (Routing):
  * /auth: تسجيل الدخول والتسجيل.
  * /backoffice: إدارة المخزون، المشتريات، الموظفين.
  * /pos: واجهة العملاء للتسوق.
  * /reports: عرض التقارير.

===========================================
4. تفاصيل المصادقة (Authentication)
---------------------------------------
- استخدام Supabase Auth.
- إنشاء صفحات تسجيل الدخول والتسجيل.
- حماية المسارات باستخدام Guards.
- إدارة أدوار المستخدمين (مدير، موظف).

===========================================
5. تفاصيل إدارة المخزون والBackoffice
-----------------------------------------
- شاشات إدارة المواد الخام، المنتجات، المشتريات والموظفين.
- واجهة Dashboard تلخص الحالة العامة.
- الربط مع قاعدة البيانات لتحديث الكميات والإحصائيات فورياً.

===========================================
6. تفاصيل واجهة العملاء (POS online)
---------------------------------------
الهدف: توفير تجربة تسوق سلسة للمستخدمين تشبه مواقع التسوق الكبرى.

6.1 الصفحة الرئيسية (Home Page)
  - Banner رئيسي يعرض أحدث العروض.
  - توصيات ومنتجات مختارة.
  - تصنيفات المنتجات (عطور رجالي، نسائي، unisex).
  - قسم للعروض مع عد تنازلي لوفيه خصومات محدودة.

6.2 صفحة البحث وتصفية المنتجات
  - شريط بحث مع خاصية الـ autocomplete.
  - خيارات لتصفية المنتجات حسب السعر، النوع، العلامة التجارية وتقييمات المستخدمين.
  - عرض النتائج في شكل Grid أو قائمة.

6.3 صفحة تفاصيل المنتج
  - عرض صور متعددة مع إمكانية تكبير الصورة.
  - بيانات المنتج (اسم، وصف، سعر، كمية متاحة).
  - خيارات تخصيص مثل حجم الزجاجة أو نوع التعبئة.
  - زر "أضف للسلة" مع إمكانية تحديد الكمية.
  - مشاركة المنتج على السوشيال ميديا.

6.4 عربة التسوق (Cart)
  - عرض المنتجات المضافة مع تعديل الكمية أو الإزالة.
  - ملخص الفاتورة يشمل السعر الفرعي، الضرائب، تكلفة الشحن.
  - زر "انتقل للشراء" لاستكمال عملية الدفع.

6.5 صفحة الدفع (Checkout)
  - جمع بيانات العميل (عنوان الشحن والفواتير).
  - خيارات الدفع: بطاقة ائتمان، الدفع عند الاستلام، بوابات إلكترونية.
  - مراجعة الطلب مع إمكانية إدخال كود خصم.
  - زر "تأكيد الطلب" لإنهاء العملية.

6.6 صفحة تأكيد الطلب
  - رسالة تأكيد تتضمن رقم الطلب وتفاصيله.
  - رابط لتتبع حالة الطلب.
  - اقتراحات لمنتجات تانية بعد الشراء.

6.7 تحسين تجربة المستخدم:
  - تسجيل الدخول/التسجيل بسهولة باستخدام النوافذ المنبثقة.
  - دعم الدردشة المباشرة للمساعدة.
  - قسم FAQ للإجابة عن الاستفسارات.
  - التصميم متجاوب لجميع الأجهزة.

===========================================
7. الربط مع النظام الخلفي (Supabase API)
--------------------------------------------
- جلب بيانات المنتجات وتفاصيلها.
- عند تأكيد الدفع: إنشاء سجل طلب، تحديث المخزون، وربط الفاتورة بعمليات البيع.
- تخزين بيانات المستخدمين بشكل آمن عند تسجيل حساب جديد.

===========================================
8. تنظيم الملفات والمجلدات
--------------------------------------------
هيكلية الملفات كما يلي:
  
src/
  ├── app/
  │     ├── core/         # الخدمات العامة والاتصال بالـ API
  │     ├── shared/       # المكونات المشتركة
  │     ├── features/
  │           ├── auth/     # صفحات تسجيل الدخول والتسجيل
  │           ├── backoffice/  # إدارة المخزون والمشتريات
  │           └── pos/       # واجهة العملاء (POS online)
  │     └── app-routing.module.ts
  ├── assets/
  │     └── styles/        # ملفات CSS والتصاميم
  └── environments/        # إعدادات البيئة (development, production)

===========================================
9. الجدول الزمني المُحدث (Updated Timeline)
---------------------------------------------
[14 - 16 أبريل]
  - إكمال Navbar وتفعيل المصادقة (Authentication) وربطها مع Supabase.

[17 - 20 أبريل]
  - إعداد الهيكلية الأساسية للواجهات: Home Page, صفحة البحث وتصفية المنتجات.

[21 - 24 أبريل]
  - تطوير صفحة تفاصيل المنتج مع عرض الصور، الوصف، خيارات التخصيص، وزر "أضف للسلة".

[25 - 28 أبريل]
  - تنفيذ عربة التسوق (Cart) مع تعديل الكميات وإدارة الفاتورة (الشحن والضرائب).

[29 أبريل - 2 مايو]
  - تطوير صفحة الدفع (Checkout): جمع بيانات العميل وخيارات الدفع مع تفعيل API لإتمام الطلب.

[3 - 6 مايو]
  - صفحة تأكيد الطلب: عرض تفاصيل الطلب، رقم التتبع، والتواصل مع العميل.

[7 - 9 مايو]
  - مراجعة واختبارات شاملة لضمان سهولة الاستخدام وتجربة عميل ممتازة.

[10 - 12 مايو]
  - تحسين تجربة المستخدم بإضافة مميزات إضافية:
      - دعم الدردشة المباشرة.
      - صفحة FAQ.
      - تحسين الأداء والتوافق مع الأجهزة المختلفة.

===========================================
10. خطوات المتابعة والاختبار (Testing and Follow-up)
---------------------------------------------------
- جلسات اختبار مع مجموعة من المستخدمين لضمان سهولة الاستخدام.
- مراقبة الأداء باستخدام أدوات تحليل السرعة وتحسين SEO.
- مراجعة التصميم بعد تنفيذ النماذج الأولية (Mockups) والعمل على التعديلات حسب الملاحظات.
- اختبارات شاملة للتوافق مع مختلف الأجهزة (موبايل، تابلت، ديسكتوب).

===========================================
11. ملاحظات نهائية
------------------
- كل مرحلة لازم تتعمل خطوة بخطوة ونراجع النتائج قبل الانتقال للمرحلة اللي بعدها.
- اتأكد من تحديث قاعدة البيانات والـ API باستمرار بحيث تكون متوافقة مع التغييرات في الواجهات.
- دائماً خلي تجربة المستخدم هي الأولوية لضمان تحويل الزوار لعملاء دائمين.

===========================================
نهاية الملف
===========================================

antother plan 

تمام، هنرتب الخطة بحيث نبدأ بالتصميم الأول وبعدين ننتقل للداتا والمنطق، وبعدها نبني الواجهات، ونخلص بالمراجعة. كل ده بالترتيب:

---

## النظرة العامة المحدثة للمراحل والزمن  
- **المرحلة 1 (تصميم واجهات Backoffice وPOS على Figma):** 21 أبريل – 28 أبريل 2025  
- **المرحلة 2 (إعداد البيئة وتهيئة IndexedDB):** 29 أبريل – 3 مايو 2025  
- **المرحلة 3 (منطق البيانات والـ Authentication في الفرونت):** 4 مايو – 11 مايو 2025  
- **المرحلة 4 (بناء واجهات Backoffice وPOS فعلياً في Angular):** 12 مايو – 26 مايو 2025  
- **المرحلة 5 (مراجعة نهائية وتسليم):** 27 مايو – 31 مايو 2025  

> **ملحوظة:** بنشتغل من السبت للخميس، ويوم الجمعة فري.

---

### المرحلة 1: تصميم واجهات Backoffice وPOS على Figma  
**21 أبريل – 28 أبريل**  
1. **شاشات Backoffice**  
   - Dashboard (إحصائيات يومية/شهرية)  
   - إدارة المخزون (raw materials, bottles)  
   - المشتريات والفواتير  
   - التقارير  
   - إدارة المستخدمين  
2. **شاشات POS**  
   - شاشة اختيار الأصناف وإضافتها للفاتورة  
   - شاشة الدفع (نقدي/كارت)  
   - شاشة طباعة الفاتورة  
3. **تطبيق الألوان**  
   - البنفسجي كلون أساسي  
   - الأحمر، الذهبي، الأزرق كنغمات مرافقة  
4. **مراجعة التصميم**  
   - ناخد رأيك النهائي قبل الانتقال للتطوير  

---

### المرحلة 2: إعداد البيئة وتهيئة IndexedDB  
**29 أبريل – 3 مايو**  
1. **سكافولد مشروع Angular 19**  
   - تطوير في البراوزر فقط (بدون SSR)  
   - تركيب PrimeNG، Tailwind CSS، Flowbite  
2. **تهيئة IndexedDB بمكتبة `idb`**  
   - إنشاء `PerfumeShopDB`  
   - object stores: users, rawMaterials, bottles, purchases, sales, bills  
   - إعداد الفهارس الضرورية (مثلاً للـ date)  
3. **خدمة DataService**  
   - CRUD أساسي لكل object store  
   - تجربة عمليات إضافة وجلب من الكونsole  

---

### المرحلة 3: منطق البيانات والـ Authentication في الفرونت  
**4 مايو – 11 مايو**  
1. **تسجيل مستخدم وتسجيل دخول**  
   - تخزين username وhashedPassword في users store (Web Crypto API)  
   - مقارنة الـ hash عند تسجيل الدخول  
   - إدارة الجلسة باستخدم `BehaviorSubject` أو `localStorage`  
2. **AuthGuard للـ Routes**  
   - نحمي شاشات Backoffice وPOS من غير مسجّلين  
3. **DataService متقدم**  
   - خدمات مخصصة للـ rawMaterials و bottles وpurchases وsales وbills  
4. **ReportsService**  
   - فلترة وإجمال بيانات من IndexedDB لحساب تقارير يومية وشهرية  

---

### المرحلة 4: بناء واجهات Backoffice وPOS في Angular  
**12 مايو – 26 مايو**  
1. **Backoffice Components**  
   - جداول PrimeNG مع pagination وfilters  
   - Cards للإحصائيات (مبيعات، مخزون…)  
   - Modals وToasts من Flowbite  
2. **POS Components**  
   - قائمة الأصناف وإضافة للعربة  
   - حساب فوري للكميات والأسعار  
   - دعم باركود (input أو كاميرا)  
   - شاشة الدفع وربطها بـ DataService (حفظ في bills وsales)  
   - طباعة الفاتورة بـ `window.print()`  
3. **تأكيد التكامل**  
   - كل الـ Components تستدعي DataService وReportsService بشكل سلس  
4. **تحسين الأداء والـ UX**  
   - Lazy loading للـ modules  
   - Loading spinners للعمليات الثقيلة  

---

### المرحلة 5: مراجعة نهائية وتسليم  
**27 مايو – 31 مايو**  
- **اختبار شامل** (End‑to‑End) لكل الشاشات والوظائف  
- **تحسينات أخيرة**  
  - التأكد من سرعة IndexedDB (لو محتاج Web Worker)  
  - تحسينات CSS للـ responsiveness  
- **تجهيز الوثائق**  
  - README يشرح خطوات التشغيل  
  - فيديو صغير يشرح طريقة الاستخدام (اختياري)  
- **نشر المشروع**  
  - رفع الكود على GitHub  
  - نشر الواجهة على Vercel أو Netlify  

---

لو شايف أي نقطة محتاجة تعديل أو إضافة تفاصيل أكتر، قولي.



---------------------------------------
| Navbar: Logo | Perfume Shop | User  |
---------------------------------------
| Sidebar:     |        Main Content       |
| - Dashboard  | 1. Row of KPI Cards      |
| - Inventory  | 2. Recent Invoices Table |
| - Purchases  | 3. Quick Actions Buttons |
| - Reports    |                          |
| - Users      |                          |
---------------------------------------
Wireframes منخفضة الدقة (Low-Fidelity) لـ Dashboard

1. هيكل الصفحة العام

---------------------------------------
| Navbar: Logo | Perfume Shop | User  |
---------------------------------------
| Sidebar:     |        Main Content       |
| - Dashboard  | 1. Row of KPI Cards      |
| - Inventory  | 2. Recent Invoices Table |
| - Purchases  | 3. Quick Actions Buttons |
| - Reports    |                          |
| - Users      |                          |
---------------------------------------

2. مكونات الـ Dashboard

Navbar

يظهر في أعلى الصفحة بعرض كامل

على اليسار: شعار المشروع (Logo)

في المنتصف: عنوان Page ("Dashboard")

على اليمين: أيقونة المستخدم واسم منسدل للقائمة (Profile, Logout)

Sidebar

عمود ثابت على يسار الشاشة

روابط رئيسية: Dashboard, Inventory, Purchases, Reports, Users

أيقونات بسيطة بجانب كل عنصر

Main Content

3.1 Row of KPI Cards (Grid 1×4)

مبيعات اليوم (Value + Icon)

عدد الفواتير المفتوحة

كمية المواد الخام المتبقية

عدد زجاجات اليوم

3.2 جدول الفواتير الأخيرة

أعمدة: Invoice #, Date, Customer, Total, Status, Actions

pagination أسفل الجدول

3.3 Quick Actions

أزرار (مثل: "Add New Purchase", "Create Invoice", "Generate Report")

موجودة أسفل الجدول أو على الجانب

3. ملاحظات التصميم

استخدم المسافات وفقًا للـ spacing system (8/16/24)

العناصر القابلة للنقر تظهر hover effect خفيف

تكامل الألوان: خلفية الـ cards بلون Neutral Light، النص بالـ Neutral Dark، والـ accents من Primary